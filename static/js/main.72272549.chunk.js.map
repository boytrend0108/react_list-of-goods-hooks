{"version":3,"sources":["types/SortType.ts","components/GoodItem/GoodItem.tsx","components/GoodList/GoodList.tsx","constanst/sortBy.ts","components/Buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["SortType","GoodItem","el","GoodList","goodsFromServer","map","SORT_BY","ALPHABET","alphabet","LENGTH","length","REVERSE","reverse","Buttons","setSortby","setIsReversed","isReversed","sortBy","className","type","onClick","reset","list","App","useState","sortedList","sort","good1","good2","localeCompare","prepereList","status","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,kDCMCC,EAA4B,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC1C,OACE,oBAAI,UAAQ,OAAZ,SAAoBA,KCDXC,EAA4B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC1C,OACE,6BACGA,EAAgBC,KAAI,SAAAH,GAAE,OACrB,cAAC,EAAD,CAAUA,GAAIA,GAASA,U,SFXnBF,O,uBAAAA,I,mBAAAA,I,qBAAAA,I,kBAAAA,M,KGML,IAAMM,EAAkB,CAC7BC,SAAUP,EAASQ,SACnBC,OAAQT,EAASU,OACjBC,QAASX,EAASY,SCEPC,EAA2B,SAAC,GAOnC,IALFC,EAKC,EALDA,UACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,OAGF,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBD,IAAWX,EAAQC,UAAY,YAC5Da,QAAS,kBAAMN,EAAUR,EAAQC,WAHnC,iCAQA,wBACEY,KAAK,SACLD,UAAS,yBAAoBD,IAAWX,EAAQG,QAAU,YAC1DW,QAAS,kBAAMN,EAAUR,EAAQG,SAHnC,4BAQA,wBACEU,KAAK,SACLD,UAAS,0BAAqBF,GAAc,YAC5CI,QAAS,WACPL,GAAeC,GACfF,EAAUR,EAAQK,UALtB,qBAWCM,IAAWjB,EAASqB,OACnB,wBACEF,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPL,GAAc,GACdD,EAAUd,EAASqB,QALvB,uBCxCKjB,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIkB,EAAI,UAAOlB,GAeV,IAAMmB,EAAgB,WAC3B,MAA4BC,mBAAmBxB,EAASqB,OAAxD,mBAAOJ,EAAP,KAAeH,EAAf,KACA,EAAoCU,oBAAS,GAA7C,mBAAOR,EAAP,KAAmBD,EAAnB,KAEMU,EAjBR,SAAqBR,GACnB,OAAQA,GACN,KAAKX,EAAQC,SACX,OAAOe,EAAKI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,KAAKtB,EAAQG,OACX,OAAOa,EAAKI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMjB,OAASkB,EAAMlB,UAC1D,KAAKJ,EAAQK,QACX,OAAOW,EAAKV,UACd,QACE,OAAOR,GAQQ0B,CAAYb,GAE/B,OACE,sBAAKC,UAAU,kBAAf,UACE,cAAC,EAAD,CACEJ,UAAW,SAACY,GAAD,OAAUZ,EAAUY,IAC/BX,cAAe,SAACgB,GAAD,OAAYhB,EAAcgB,IACzCf,WAAYA,EACZC,OAAQA,IAEV,cAAC,EAAD,CAAUb,gBAAiBqB,QChDjCO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72272549.chunk.js","sourcesContent":["export enum SortType {\n  alphabet,\n  length,\n  reverse,\n  reset,\n}\n","import React from 'react';\n\ntype Props = {\n  el: string;\n};\n\nexport const GoodItem: React.FC<Props> = ({ el }) => {\n  return (\n    <li data-cy=\"Good\">{el}</li>\n  );\n};\n","import React from 'react';\nimport { GoodItem } from '../GoodItem';\n\ntype Props = {\n  goodsFromServer: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goodsFromServer }) => {\n  return (\n    <ul>\n      {goodsFromServer.map(el => (\n        <GoodItem el={el} key={el} />\n      ))}\n    </ul>\n  );\n};\n","import { SortType } from '../types/SortType';\n\ninterface SortBy {\n  [key: string]: SortType;\n}\n\nexport const SORT_BY: SortBy = {\n  ALPHABET: SortType.alphabet,\n  LENGTH: SortType.length,\n  REVERSE: SortType.reverse,\n};\n","import React from 'react';\nimport { SORT_BY } from '../../constanst/sortBy';\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  setSortby: (value: React.SetStateAction<SortType>) => void;\n  setIsReversed: (status: boolean) => void;\n  isReversed: boolean;\n  sortBy: SortType;\n};\n\nexport const Buttons: React.FC<Props> = (\n  {\n    setSortby,\n    setIsReversed,\n    isReversed,\n    sortBy,\n  },\n) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={`button is-info ${sortBy !== SORT_BY.ALPHABET && 'is-light'}`}\n        onClick={() => setSortby(SORT_BY.ALPHABET)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-info ${sortBy !== SORT_BY.LENGTH && 'is-light'}`}\n        onClick={() => setSortby(SORT_BY.LENGTH)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-info ${!isReversed && 'is-light'}`}\n        onClick={() => {\n          setIsReversed(!isReversed);\n          setSortby(SORT_BY.REVERSE);\n        }}\n      >\n        Reverse\n      </button>\n\n      {sortBy !== SortType.reset && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setIsReversed(false);\n            setSortby(SortType.reset);\n          }}\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\nimport { Buttons } from './components/Buttons';\nimport { SortType } from './types/SortType';\nimport { SORT_BY } from './constanst/sortBy';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst list = [...goodsFromServer];\n\nfunction prepereList(sortBy: SortType | string): string[] {\n  switch (sortBy) {\n    case SORT_BY.ALPHABET:\n      return list.sort((good1, good2) => good1.localeCompare(good2));\n    case SORT_BY.LENGTH:\n      return list.sort((good1, good2) => good1.length - good2.length);\n    case SORT_BY.REVERSE:\n      return list.reverse();\n    default:\n      return goodsFromServer;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortby] = useState<SortType>(SortType.reset);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedList = prepereList(sortBy);\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        setSortby={(sort) => setSortby(sort)}\n        setIsReversed={(status) => setIsReversed(status)}\n        isReversed={isReversed}\n        sortBy={sortBy}\n      />\n      <GoodList goodsFromServer={sortedList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}