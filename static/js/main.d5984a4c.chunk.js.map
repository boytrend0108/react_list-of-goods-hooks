{"version":3,"sources":["types/SortType.ts","components/GoodItem/GoodItem.tsx","components/GoodList/GoodList.tsx","components/Buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["SortType","GoodItem","el","GoodList","goodsFromServer","map","Buttons","setSortby","setIsReversed","isReversed","sortBy","className","type","alphabet","onClick","length","initial","App","useState","sortedList","goods","list","sort","good1","good2","localeCompare","reverse","getPreparedList","status","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,0DCMCC,EAA4B,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC1C,OACE,oBAAI,UAAQ,OAAZ,SAAoBA,KCDXC,EAA4B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC1C,OACE,6BACGA,EAAgBC,KAAI,SAAAH,GAAE,OACrB,cAAC,EAAD,CAAUA,GAAIA,GAASA,U,SFXnBF,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,KGUL,IAAMM,EAA2B,SAAC,GAOnC,IALFC,EAKC,EALDA,UACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,OAOF,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBD,IAAWV,EAASa,UAAY,YAC7DC,QAAS,kBAAMP,EAAUP,EAASa,WAHpC,iCAQA,wBACED,KAAK,SACLD,UAAS,4BAAuBD,IAAWV,EAASe,QAAU,YAC9DD,QAAS,kBAAMP,EAAUP,EAASe,SAHpC,4BAQA,wBACEH,KAAK,SACLD,UAAS,6BAAwBF,GAAc,YAC/CK,QAAS,WACPN,GAAeC,IAJnB,sBArBKC,IAAWV,EAASgB,SAAWP,IAgClC,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPN,GAAc,GACdD,EAAUP,EAASgB,UALvB,uBC3CKZ,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMa,EAAgB,WAC3B,MAA4BC,mBAAmBlB,EAASgB,SAAxD,mBAAON,EAAP,KAAeH,EAAf,KACA,EAAoCW,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBD,EAAnB,KAEMW,EA9BR,SACEC,EADF,GAGa,IADTV,EACQ,EADRA,OAAQD,EACA,EADAA,WAEJY,EAAI,YAAOD,GAejB,OAbIV,GACFW,EAAKC,MAAK,SAACC,EAAOC,GAChB,OAAQd,GACN,KAAKV,EAASa,SACZ,OAAOU,EAAME,cAAcD,GAC7B,KAAKxB,EAASe,OACZ,OAAOQ,EAAMR,OAASS,EAAMT,OAE9B,QAAS,OAAO,MAKlBN,EACKY,EAAKK,UAGPL,EAOYM,CAAgBvB,EAAiB,CAAEM,SAAQD,eAE9D,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEJ,UAAW,SAACe,GAAD,OAAUf,EAAUe,IAC/Bd,cAAe,SAACoB,GAAD,OAAoBpB,EAAcoB,IACjDnB,WAAYA,EACZC,OAAQA,IAEV,cAAC,EAAD,CAAUN,gBAAiBe,QC/DjCU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5984a4c.chunk.js","sourcesContent":["export enum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  initial = 'initial',\n}\n","import React from 'react';\n\ntype Props = {\n  el: string;\n};\n\nexport const GoodItem: React.FC<Props> = ({ el }) => {\n  return (\n    <li data-cy=\"Good\">{el}</li>\n  );\n};\n","import React from 'react';\nimport { GoodItem } from '../GoodItem';\n\ntype Props = {\n  goodsFromServer: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goodsFromServer }) => {\n  return (\n    <ul>\n      {goodsFromServer.map(el => (\n        <GoodItem el={el} key={el} />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  setSortby: (value: React.SetStateAction<SortType>) => void;\n  setIsReversed: (status: boolean) => void;\n  isReversed: boolean;\n  sortBy: SortType;\n};\n\nexport const Buttons: React.FC<Props> = (\n  {\n    setSortby,\n    setIsReversed,\n    isReversed,\n    sortBy,\n  },\n) => {\n  const showResetBtn = () => {\n    return sortBy !== SortType.initial || isReversed;\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={`button is-info ${sortBy !== SortType.alphabet && 'is-light'}`}\n        onClick={() => setSortby(SortType.alphabet)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-success ${sortBy !== SortType.length && 'is-light'}`}\n        onClick={() => setSortby(SortType.length)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-warning ${!isReversed && 'is-light'}`}\n        onClick={() => {\n          setIsReversed(!isReversed);\n        }}\n      >\n        Reverse\n      </button>\n\n      {showResetBtn() && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setIsReversed(false);\n            setSortby(SortType.initial);\n          }}\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\nimport { Buttons } from './components/Buttons';\nimport { SortType } from './types/SortType';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface ActionParams {\n  sortBy: SortType;\n  isReversed: boolean;\n}\n\nfunction getPreparedList(\n  goods: string[],\n  { sortBy, isReversed }: ActionParams,\n): string[] {\n  const list = [...goods];\n\n  if (sortBy) {\n    list.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default: return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return list.reverse();\n  }\n\n  return list;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortby] = useState<SortType>(SortType.initial);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedList = getPreparedList(goodsFromServer, { sortBy, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        setSortby={(sort) => setSortby(sort)}\n        setIsReversed={(status:boolean) => setIsReversed(status)}\n        isReversed={isReversed}\n        sortBy={sortBy}\n      />\n      <GoodList goodsFromServer={sortedList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}